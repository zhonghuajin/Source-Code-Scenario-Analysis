io.netty.channel.nio.SelectedSelectionKeySet.contains    19    103    //这个函数总是返回false。netty不需要nio底层处理这个函数为true的情况。
io.netty.channel.nio.SelectedSelectionKeySet.add    19    38    //把selectionkey放到selector的selectedKeys中。每个channel对应一个selectionkey，每个selectionkey包含多个channel感兴趣的事件，当channel对应的fd（和selectionkey有映射关系）中发生感兴趣的事件的时候，把selectionkey放到selector的selectedKeys中        
io.netty.channel.nio.AbstractNioChannel.unsafe    19    108    //返回通道（当前场景中为NioServerSocketChannel）NioUnsafe类。NioUnsafe是JDK NIO ServerSocketChannel的unsafe的封装，网络操作比如绑定端口，监听连接都通过NioUnsafe进行,返回通道的unsafe就是准备读数据了。            
io.netty.channel.AbstractChannel.unsafe    19    279    //略
io.netty.channel.socket.nio.NioSocketChannel.config    19    112    //获取channel的配置
io.netty.channel.DefaultChannelConfig.isAutoRead    19    274    //判断读数据后是否触发读事件以便源源不断的读数据                
io.netty.channel.AbstractChannel.pipeline    19    99    //略
io.netty.channel.DefaultChannelConfig.getAllocator    19    246    //获取内存分配器。netty有自己的内存管理，过于底层，这里不讨论
io.netty.channel.DefaultChannelConfig.getMaxMessagesPerRead    19    217    //返回每次能读取的信息数
io.netty.channel.DefaultChannelConfig.getRecvByteBufAllocator    19    260    //略
io.netty.channel.AdaptiveRecvByteBufAllocator.newHandle    19    180        //略
io.netty.buffer.AbstractByteBufAllocator.ioBuffer    19    106    //略。io.netty.buffer相关的都不讨论
io.netty.buffer.AbstractByteBufAllocator.directBuffer    19    146    //略
io.netty.buffer.AbstractByteBufAllocator.directBuffer    19    151    //略
io.netty.buffer.UnpooledByteBufAllocator.newDirectBuffer    19    50    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.allocateDirect    19    106    //略
io.netty.util.ResourceLeakDetector.open    19    201    //ResourceLeakDetector是netty自己实现的资源泄露机制，这里不讨论
io.netty.buffer.WrappedByteBuf.writableBytes    19    134    //获取buffer中还可以用的空间
io.netty.buffer.AbstractByteBuf.writableBytes    19    154    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.channel.socket.nio.NioSocketChannel.doReadBytes    19    242    //读取通道对应的socket中的数据
io.netty.channel.socket.nio.NioSocketChannel.javaChannel    19    117    //略
io.netty.channel.nio.AbstractNioChannel.javaChannel    19    112    //略
io.netty.buffer.WrappedByteBuf.writableBytes    19    134    //略
io.netty.buffer.AbstractByteBuf.writableBytes    19    154    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.writeBytes    19    648    //略
io.netty.buffer.AbstractByteBuf.writeBytes    19    896    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.AbstractByteBuf.ensureWritable    19    245    //略
io.netty.buffer.AbstractByteBuf.writableBytes    19    154    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.setBytes    19    353    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.channel.nio.AbstractNioChannel.setReadPending    19    133    //设置ReadPending。设为false,selectionkey会失去对读事件的兴趣，这里就是设置为false，因为马上就要触发”读“事件传播让通道消化已经读到的数据，没消化完之前对读事件不感兴趣
io.netty.channel.DefaultChannelPipeline.fireChannelRead    19    846    //触发”读“事件在pipeline的handler传播。
io.netty.channel.AbstractChannelHandlerContext.fireChannelRead    19    297    //略
io.netty.channel.AbstractChannelHandlerContext.executor    19    112    //略
io.netty.channel.AbstractChannelHandlerContext.channel    19    97    //略
io.netty.channel.nio.AbstractNioChannel.eventLoop    19    117    //略
io.netty.channel.AbstractChannel.eventLoop    19    109    //略
io.netty.util.concurrent.AbstractEventExecutor.inEventLoop    19    39    //略
io.netty.util.concurrent.SingleThreadEventExecutor.inEventLoop    19    428    //略
io.netty.channel.DefaultChannelHandlerContext.handler    19    35    //略
io.netty.handler.codec.ByteToMessageDecoder.channelRead    19    234    //略
io.netty.util.Recycler.get    19    87    //获取一个可回收的ArrayList。ArrayList是netty的底层数据结构，这里不讨论
io.netty.util.concurrent.FastThreadLocal.get    19    135    //略
io.netty.util.concurrent.FastThreadLocalThread.threadLocalMap    19    62    //略
io.netty.util.concurrent.FastThreadLocal.get    19    144    //略
io.netty.util.internal.InternalThreadLocalMap.indexedVariable    19    259    //略
io.netty.util.internal.InternalThreadLocalMap.setIndexedVariable    19    267    //略
io.netty.util.internal.InternalThreadLocalMap.indexedVariable    19    259    //略
io.netty.util.internal.InternalThreadLocalMap.setIndexedVariable    19    267    //略
io.netty.handler.codec.ByteToMessageDecoder.callDecode    19    350    //调用解码器。上面用io.netty.util.Recycler.get获取的可回收的空间就是用来保存节码后的信息的
io.netty.buffer.WrappedByteBuf.isReadable    19    144    //略
io.netty.buffer.AbstractByteBuf.isReadable    19    129    //略
io.netty.buffer.WrappedByteBuf.readableBytes    19    129    //略。私有协议一般分成好多个部分，每个部分都用readableBytes读出来，所以下面会有很多和readableBytes相关的函数重复出现。
io.netty.buffer.AbstractByteBuf.readableBytes    19    149    //略
io.netty.buffer.WrappedByteBuf.readableBytes    19    129    //略
io.netty.buffer.AbstractByteBuf.readableBytes    19    149    //略
io.netty.buffer.WrappedByteBuf.markReaderIndex    19    160    //返回从什么地方开始读数据的信息。markReaderIndex是实现拆包的基础。如果数据读出来之后，根据协议解析发现当前读到的数据的长度没有达到协议中的长度，就复位markReaderIndex，取消当前的解码工作，等读到足够多的数据了再重新节码
io.netty.buffer.AbstractByteBuf.markReaderIndex    19    164    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.buffer.WrappedByteBuf.readableBytes    19    129    //略
io.netty.buffer.AbstractByteBuf.readableBytes    19    149    //略
io.netty.buffer.WrappedByteBuf.readBytes    19    518    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    701    //略
io.netty.buffer.AbstractByteBuf.readBytes    19    693    //略
io.netty.buffer.AbstractByteBuf.checkReadableBytes    19    1169    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.getBytes    19    249    //略
io.netty.buffer.AbstractByteBuf.checkIndex    19    1136    //略
io.netty.buffer.AbstractByteBuf.ensureAccessible    19    1189    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.refCnt    19    48    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.capacity    19    139    //略
io.netty.util.internal.RecyclableArrayList.add    19    113    //把数据放进可回收数组中。到这里为止，客户端的一个完整的mesaage就节码完成了
io.netty.channel.AbstractChannelHandlerContext.isRemoved    19    849    //判断context被remove了没有。用户自定义的解码器有可能解码完之后就把自己从pipeline中删掉，如果真的是这样，从callDecode的decode调用返回之后就不应该再进行任何还属于解码相关的操作了，要从callDecode的循环中跳出
io.netty.buffer.WrappedByteBuf.readableBytes    19    129        //略
io.netty.buffer.AbstractByteBuf.readableBytes    19    149    //略
io.netty.handler.codec.ByteToMessageDecoder.isSingleDecode    19    162    //判断是否一次只处理一条message。如果是，也结束callDecode循环
io.netty.buffer.WrappedByteBuf.isReadable    19    144    //略
io.netty.buffer.AbstractByteBuf.isReadable    19    129    //略
io.netty.buffer.WrappedByteBuf.isReadable    19    144    //略
io.netty.buffer.AbstractByteBuf.isReadable    19    129    //略
io.netty.buffer.SimpleLeakAwareByteBuf.release    19    34        //略
io.netty.buffer.WrappedByteBuf.release    19    827    //略
io.netty.buffer.AbstractReferenceCountedByteBuf.release    19    99    //略
io.netty.util.internal.UnsafeAtomicIntegerFieldUpdater.compareAndSet    19    39    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.deallocate    19    400    //略
io.netty.buffer.UnpooledUnsafeDirectByteBuf.freeDirect    19    113    //略
io.netty.util.internal.RecyclableArrayList.insertSinceRecycled    19    146    //略
io.netty.channel.AbstractChannelHandlerContext.fireChannelRead    19    297    //略
io.netty.channel.AbstractChannelHandlerContext.executor    19    112    //略
io.netty.channel.AbstractChannelHandlerContext.channel    19    97    //略
io.netty.channel.nio.AbstractNioChannel.eventLoop    19    117    //略
io.netty.channel.AbstractChannel.eventLoop    19    109    //略
io.netty.util.concurrent.AbstractEventExecutor.inEventLoop    19    39    //略
io.netty.util.concurrent.SingleThreadEventExecutor.inEventLoop    19    428    //略
io.netty.channel.DefaultChannelHandlerContext.handler    19    35    //略
io.netty.channel.SimpleChannelInboundHandler.channelRead    19    100    //略。解码器得到的信息在这里得到真正的处理
io.netty.channel.SimpleChannelInboundHandler.acceptInboundMessage    19    95    //判断message的类型是不是handler应该处理的
io.netty.util.internal.NoOpTypeParameterMatcher.match    19    22    //略。判断message的类型是不是handler应该处理的
io.netty.channel.AbstractChannelHandlerContext.channel    19    97    //略
io.netty.util.internal.RecyclableArrayList.recycle    19    153    //略
io.netty.util.Recycler.recycle    19    100    //略
io.netty.channel.DefaultChannelConfig.isAutoRead    19    274    //略。如果不是AutoRead，不要在AbstractNioByteChannel的read中循环读
io.netty.channel.DefaultChannelPipeline.fireChannelReadComplete    19    852    //触发”读完成“在pipeline中传播
io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete    19    326    //略
io.netty.channel.AbstractChannelHandlerContext.executor    19    112    //略
io.netty.channel.AbstractChannelHandlerContext.channel    19    97    //略
io.netty.channel.nio.AbstractNioChannel.eventLoop    19    117    //略
io.netty.channel.AbstractChannel.eventLoop    19    109    //略
io.netty.util.concurrent.AbstractEventExecutor.inEventLoop    19    39    //略
io.netty.util.concurrent.SingleThreadEventExecutor.inEventLoop    19    428    //略
io.netty.channel.DefaultChannelHandlerContext.handler    19    35    //略
io.netty.handler.codec.ByteToMessageDecoder.channelReadComplete    19    282    //略
io.netty.handler.codec.ByteToMessageDecoder.discardSomeReadBytes    19    294    //重用缓冲区中已经以及被读取的数据占用的内存的机制，不讨论
io.netty.channel.AbstractChannelHandlerContext.fireChannelReadComplete    19    326    //略
io.netty.channel.AbstractChannelHandlerContext.executor    19    112    //略
io.netty.channel.AbstractChannelHandlerContext.channel    19    97    //略
io.netty.channel.nio.AbstractNioChannel.eventLoop    19    117    //略
io.netty.channel.AbstractChannel.eventLoop    19    109    //略
io.netty.util.concurrent.AbstractEventExecutor.inEventLoop    19    39    //略
io.netty.util.concurrent.SingleThreadEventExecutor.inEventLoop    19    428    //略
io.netty.channel.DefaultChannelHandlerContext.handler    19    35    //略
io.netty.channel.socket.nio.NioSocketChannel.config    19    112    //略
io.netty.channel.DefaultChannelConfig.isAutoRead    19    274    //略。执行到这里，”读“事件已经在pipeline中传播完，如果配置了自动读就会自动读取了
io.netty.channel.DefaultChannelPipeline.read    19    933    //略
io.netty.channel.AbstractChannelHandlerContext.read    19    592    //略
io.netty.channel.AbstractChannelHandlerContext.executor    19    112    //略
io.netty.channel.AbstractChannelHandlerContext.channel    19    97    //略
io.netty.channel.nio.AbstractNioChannel.eventLoop    19    117    //略
io.netty.channel.AbstractChannel.eventLoop    19    109    //略
io.netty.util.concurrent.AbstractEventExecutor.inEventLoop    19    39    //略
io.netty.util.concurrent.SingleThreadEventExecutor.inEventLoop    19    428    //略
io.netty.channel.DefaultChannelHandlerContext.handler    19    35    //略
io.netty.channel.ChannelOutboundHandlerAdapter.read    19    93    //略
io.netty.channel.AbstractChannelHandlerContext.read    19    592    //略
io.netty.channel.AbstractChannelHandlerContext.executor    19    112    //略
io.netty.channel.AbstractChannelHandlerContext.channel    19    97    //略
io.netty.channel.nio.AbstractNioChannel.eventLoop    19    117    //略
io.netty.channel.AbstractChannel.eventLoop    19    109    //略
io.netty.util.concurrent.AbstractEventExecutor.inEventLoop    19    39    //略
io.netty.util.concurrent.SingleThreadEventExecutor.inEventLoop    19    428    //略
io.netty.channel.socket.nio.NioSocketChannel.isActive    19    122    //略    //略
io.netty.channel.socket.nio.NioSocketChannel.javaChannel    19    117    //略
io.netty.channel.nio.AbstractNioChannel.javaChannel    19    112    //略
io.netty.channel.nio.AbstractNioChannel.doBeginRead    19    361    //略
io.netty.channel.DefaultChannelConfig.isAutoRead    19    274    //略
io.netty.channel.nio.AbstractNioChannel.isOpen    19    103    //略
